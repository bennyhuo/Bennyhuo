const e=JSON.parse('{"key":"v-71ed49eb","path":"/cpp-coroutines/07-channel.html","title":"7. 用于协程之间消息传递的 Channel","lang":"zh-CN","frontmatter":{"description":"之前我们主要关注的是协程与外部调用者的交互，这次我们也关注一下对等的协程之间的通信。 实现目标 Go routine 的 Channel Go routine 当中有一个重要的特性就是 Channel。我们可以向 Channel 当中写数据，也可以从中读数据。例如： 简单说来，Awaiter 的功能就是： 1. 负责用协程的调度器在需要时恢复协程 2....","head":[["meta",{"property":"og:url","content":"https://www.bennyhuo.com/book/cpp-coroutines/07-channel.html"}],["meta",{"property":"og:site_name","content":"Benny Huo 的专栏"}],["meta",{"property":"og:title","content":"7. 用于协程之间消息传递的 Channel"}],["meta",{"property":"og:description","content":"之前我们主要关注的是协程与外部调用者的交互，这次我们也关注一下对等的协程之间的通信。 实现目标 Go routine 的 Channel Go routine 当中有一个重要的特性就是 Channel。我们可以向 Channel 当中写数据，也可以从中读数据。例如： 简单说来，Awaiter 的功能就是： 1. 负责用协程的调度器在需要时恢复协程 2...."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-29T20:01:10.000Z"}],["meta",{"property":"article:author","content":"Benny Huo"}],["meta",{"property":"article:modified_time","content":"2023-08-29T20:01:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"7. 用于协程之间消息传递的 Channel\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-29T20:01:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Benny Huo\\",\\"url\\":\\"https://www.bennyhuo.com\\"}]}"]]},"headers":[{"level":2,"title":"实现目标","slug":"实现目标","link":"#实现目标","children":[{"level":3,"title":"Go routine 的 Channel","slug":"go-routine-的-channel","link":"#go-routine-的-channel","children":[]},{"level":3,"title":"C++ 协程的 Channel 实现设计","slug":"c-协程的-channel-实现设计","link":"#c-协程的-channel-实现设计","children":[]}]},{"level":2,"title":"co_await 表达式的支持","slug":"co-await-表达式的支持","link":"#co-await-表达式的支持","children":[]},{"level":2,"title":"Awaiter 的实现","slug":"awaiter-的实现","link":"#awaiter-的实现","children":[]},{"level":2,"title":"Channel 的实现","slug":"channel-的实现","link":"#channel-的实现","children":[{"level":3,"title":"Channel 的基本结构","slug":"channel-的基本结构","link":"#channel-的基本结构","children":[]},{"level":3,"title":"read 和 write","slug":"read-和-write","link":"#read-和-write","children":[]},{"level":3,"title":"try_push_writer 和 try_push_reader","slug":"try-push-writer-和-try-push-reader","link":"#try-push-writer-和-try-push-reader","children":[]},{"level":3,"title":"监听协程的提前销毁","slug":"监听协程的提前销毁","link":"#监听协程的提前销毁","children":[]}]},{"level":2,"title":"小试牛刀","slug":"小试牛刀","link":"#小试牛刀","children":[]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]},{"level":2,"title":"关于作者","slug":"关于作者","link":"#关于作者","children":[]}],"git":{"createdTime":1648122991000,"updatedTime":1693339270000,"contributors":[{"name":"bennyhuo","email":"bennyhuo@kotliner.cn","commits":7}]},"readingTime":{"minutes":12,"words":3600},"filePathRelative":"cpp-coroutines/07-channel.md","localizedDate":"2022年3月24日","autoDesc":true}');export{e as data};
