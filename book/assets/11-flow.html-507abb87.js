const e=JSON.parse('{"key":"v-12441342","path":"/kotlin-coroutines/11-flow.html","title":"11. Flow 篇","lang":"zh-CN","frontmatter":{"description":"Flow 就是 Kotlin 协程与响应式编程模型结合的产物，你会发现它与 RxJava 非常像，二者之间也有相互转换的 API，使用起来非常方便。 随着 RxJava 的流行，响应式编程模型逐步深入人心。Flow 就是 Kotlin 协程与响应式编程模型结合的产物。 本文基于 Kotlinx.coroutines 1.3.3，由于部分功能尚处于实验阶...","head":[["meta",{"property":"og:url","content":"https://www.bennyhuo.com/book/kotlin-coroutines/11-flow.html"}],["meta",{"property":"og:site_name","content":"Benny Huo 的专栏"}],["meta",{"property":"og:title","content":"11. Flow 篇"}],["meta",{"property":"og:description","content":"Flow 就是 Kotlin 协程与响应式编程模型结合的产物，你会发现它与 RxJava 非常像，二者之间也有相互转换的 API，使用起来非常方便。 随着 RxJava 的流行，响应式编程模型逐步深入人心。Flow 就是 Kotlin 协程与响应式编程模型结合的产物。 本文基于 Kotlinx.coroutines 1.3.3，由于部分功能尚处于实验阶..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-29T20:01:10.000Z"}],["meta",{"property":"article:author","content":"Benny Huo"}],["meta",{"property":"article:modified_time","content":"2023-08-29T20:01:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"11. Flow 篇\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-29T20:01:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Benny Huo\\",\\"url\\":\\"https://www.bennyhuo.com\\"}]}"]]},"headers":[{"level":2,"title":"认识 Flow","slug":"认识-flow","link":"#认识-flow","children":[]},{"level":2,"title":"对比 RxJava 的线程切换","slug":"对比-rxjava-的线程切换","link":"#对比-rxjava-的线程切换","children":[]},{"level":2,"title":"冷数据流","slug":"冷数据流","link":"#冷数据流","children":[]},{"level":2,"title":"异常处理","slug":"异常处理","link":"#异常处理","children":[]},{"level":2,"title":"末端操作符","slug":"末端操作符","link":"#末端操作符","children":[]},{"level":2,"title":"分离 flow 的消费和触发","slug":"分离-flow-的消费和触发","link":"#分离-flow-的消费和触发","children":[]},{"level":2,"title":"Flow 的取消","slug":"flow-的取消","link":"#flow-的取消","children":[]},{"level":2,"title":"其他 Flow 的创建方式","slug":"其他-flow-的创建方式","link":"#其他-flow-的创建方式","children":[]},{"level":2,"title":"Flow 的背压","slug":"flow-的背压","link":"#flow-的背压","children":[]},{"level":2,"title":"Flow 的变换","slug":"flow-的变换","link":"#flow-的变换","children":[]},{"level":2,"title":"使用 Flow 实现多路复用","slug":"使用-flow-实现多路复用","link":"#使用-flow-实现多路复用","children":[]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]},{"level":2,"title":"关于作者","slug":"关于作者","link":"#关于作者","children":[]}],"git":{"createdTime":1648649921000,"updatedTime":1693339270000,"contributors":[{"name":"bennyhuo","email":"bennyhuo@kotliner.cn","commits":4}]},"readingTime":{"minutes":12.19,"words":3658},"filePathRelative":"kotlin-coroutines/11-flow.md","localizedDate":"2022年3月30日","autoDesc":true}');export{e as data};
