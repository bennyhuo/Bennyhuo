const e=JSON.parse('{"key":"v-57f0645d","path":"/cpp-coroutines/03-functional.html","title":"3. 序列生成器的泛化和函数式变换","lang":"zh-CN","frontmatter":{"description":"我们还可以对序列生成器产生的数据流做进一步的筛选和处理，而这一切都可以基于协程去实现。 序列生成器的泛化 我们已经有了一个 int 版本的 Generator，实际上我们也很容易把它泛化成模板类型，改动的地方不多，基本上把原 Generator 类型当中的 int 替换成模板参数 T 即可，如下： 这样原来生成斐波那契数列的函数也需要稍作调整： 其实不...","head":[["meta",{"property":"og:url","content":"https://www.bennyhuo.com/book/cpp-coroutines/03-functional.html"}],["meta",{"property":"og:site_name","content":"Benny Huo 的专栏"}],["meta",{"property":"og:title","content":"3. 序列生成器的泛化和函数式变换"}],["meta",{"property":"og:description","content":"我们还可以对序列生成器产生的数据流做进一步的筛选和处理，而这一切都可以基于协程去实现。 序列生成器的泛化 我们已经有了一个 int 版本的 Generator，实际上我们也很容易把它泛化成模板类型，改动的地方不多，基本上把原 Generator 类型当中的 int 替换成模板参数 T 即可，如下： 这样原来生成斐波那契数列的函数也需要稍作调整： 其实不..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-20T16:24:20.000Z"}],["meta",{"property":"article:author","content":"Benny Huo"}],["meta",{"property":"article:modified_time","content":"2024-07-20T16:24:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"3. 序列生成器的泛化和函数式变换\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-07-20T16:24:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Benny Huo\\",\\"url\\":\\"https://www.bennyhuo.com\\"}]}"]]},"headers":[{"level":2,"title":"序列生成器的泛化","slug":"序列生成器的泛化","link":"#序列生成器的泛化","children":[]},{"level":2,"title":"创建 Generator 的便捷函数","slug":"创建-generator-的便捷函数","link":"#创建-generator-的便捷函数","children":[]},{"level":2,"title":"实现 map 和 flat_map","slug":"实现-map-和-flat-map","link":"#实现-map-和-flat-map","children":[{"level":3,"title":"实现 map","slug":"实现-map","link":"#实现-map","children":[]},{"level":3,"title":"实现 flat_map","slug":"实现-flat-map","link":"#实现-flat-map","children":[]}]},{"level":2,"title":"其他有趣的函数","slug":"其他有趣的函数","link":"#其他有趣的函数","children":[{"level":3,"title":"遍历所有值的 for_each","slug":"遍历所有值的-for-each","link":"#遍历所有值的-for-each","children":[]},{"level":3,"title":"折叠值的 fold","slug":"折叠值的-fold","link":"#折叠值的-fold","children":[]},{"level":3,"title":"求和函数 sum","slug":"求和函数-sum","link":"#求和函数-sum","children":[]},{"level":3,"title":"过滤部分值的 filter","slug":"过滤部分值的-filter","link":"#过滤部分值的-filter","children":[]},{"level":3,"title":"截取前 n 个值的 take(n)","slug":"截取前-n-个值的-take-n","link":"#截取前-n-个值的-take-n","children":[]},{"level":3,"title":"截取到指定条件的 take_while","slug":"截取到指定条件的-take-while","link":"#截取到指定条件的-take-while","children":[]}]},{"level":2,"title":"函数的调用时机","slug":"函数的调用时机","link":"#函数的调用时机","children":[]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]},{"level":2,"title":"关于作者","slug":"关于作者","link":"#关于作者","children":[]}],"git":{"createdTime":1648122991000,"updatedTime":1721492660000,"contributors":[{"name":"bennyhuo","email":"bennyhuo@kotliner.cn","commits":6}]},"readingTime":{"minutes":9.27,"words":2780},"filePathRelative":"cpp-coroutines/03-functional.md","localizedDate":"2022年3月24日","autoDesc":true}');export{e as data};
